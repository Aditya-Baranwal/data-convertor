version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    expose:
      - '2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - data-convertor-network
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kakfa-cluster-data-convertor
    ports:
     - '9092:9092'
    expose:
      - '9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS:LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      - KAFKA_LISTENERS:LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME:LISTENER_DOCKER_EXTERNAL
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE:false
    networks:
      - data-convertor-network
    depends_on:
      - zookeeper
  mysql-db:
    image: mysql:5.7
    container_name: mysql-db-data-convertor
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=data-convertor-db
      - MYSQL_USER=data-convertor-db-user
      - MYSQL_PASSWORD=12345678
    networks:
      - data-convertor-network
    expose:
     - '3306'
    volumes:
      - data-convertor-db-volume:/var/lib/mysql
  data-producer:
    build:
      # path where docker file has to be present
      context: data-producer
      # name of docker file
      dockerfile: Dockerfile
    # name for newly build image, with tag latest
    image: data-producer:latest
    environment:
      spring.datasource.url: jdbc:mysql://mysql-db:3306/data-convertor-db
      spring.kafka.bootstrap-servers: kafka:9092
      spring.kafka.producer.bootstrap-servers: kafka:9092
      kafka-topic.topic-1.name: operation-topic
      kafka-topic.topic-1.partition: 5
      kafka-topic.topic-1.replication-factor: 1
    ports:
      - '9001-9010:9000'
    depends_on:
      - mysql-db
      - kafka
    networks:
      - data-convertor-network
  data-consumer:
   build:
     context: data-consumer
     dockerfile: Dockerfile
   image: data-consumer:latest
   environment:
     spring.datasource.url: jdbc:mysql://mysql-db:3306/data-convertor-db
     spring.kafka.bootstrap-servers: kafka:9092
     spring.kafka.consumer.bootstrap-servers: kafka:9092
     kafka-topic.topic-1.name: operation-topic
     kafka-topic.topic-1.partition: 5
     kafka-topic.topic-1.replication-factor: 1
     spring.config.path.csv: /var/data-convertor/operation.csv
     spring.config.path.xlsx: /var/data-convertor/operation.xlsx
     server.port: 9000
   ports:
    - '9011-9020:9000'
   volumes:
    - storage-volume:/var/data-convertor
   depends_on:
     - mysql-db
     - kafka
   networks:
    - data-convertor-network
# Names our volume
volumes:
  data-convertor-db-volume:
  storage-volume:
networks:
  data-convertor-network:
    driver: bridge